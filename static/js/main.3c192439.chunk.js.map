{"version":3,"sources":["routing/AppRoute.enum.ts","store/reducers/authReducer.ts","store/reducers/productsReducer.ts","store/reducers/rootReducer.ts","store/actions/actionTypes.ts","store/store.ts","providers/AppProviders.tsx","app/logo/Logo.tsx","app/login/Login.tsx","store/actions/authActions.ts","app/header/searchField/SearchField.tsx","app/filter/Filter.tsx","utils/createContainer.ts","app/dropdown/Dropdown.tsx","app/header/Header.tsx","app/rating/Rating.tsx","app/backdrop/Backdrop.tsx","app/modal/Modal.tsx","app/loadingSpinner/LoadingSpinner.tsx","app/products/product/Product.tsx","app/pagination/Pagination.tsx","app/products/emptyList/EmptyList.tsx","app/products/Products.tsx","store/actions/productsActions.ts","routing/AppRoutes.tsx","app/App.tsx","index.tsx"],"names":["AppRoute","initialState","isLoggedIn","totalPages","isLoading","data","combineReducers","products","state","action","type","payload","auth","store","createStore","rootReducer","applyMiddleware","thunk","AppProviders","children","Logo","className","style","fontSize","Login","history","useHistory","dispatch","useDispatch","onSubmit","push","htmlFor","id","name","placeholder","to","login","SearchField","onChange","Filter","label","onClick","data-cy","createContainer","portalId","element","document","getElementById","createElement","setAttribute","body","appendChild","Dropdown","isActive","position","createPortal","Header","onToggleActiveFilter","onTogglePromoFilter","onChangeSearchValue","useSelector","useState","isDropdownActive","setIsDropdownActive","top","left","dropdownPosition","setDropdownPosition","e","target","currentTarget","getBoundingClientRect","bottom","right","prev","src","alt","justifySelf","Rating","rating","stars","setStars","useEffect","starsArray","i","unshift","key","Backdrop","Modal","image","title","description","onClose","LoadingSpinner","isSmall","Product","promo","active","isModalActive","setIsModalActive","isImgLoading","setIsImgLoading","display","onLoad","disabled","Pagination","page","paginationElements","setPaginationElements","pages","countStart","splice","EmptyList","Products","pageNumber","useParams","setIsActive","isPromo","setIsPromo","searchValue","setSearchValue","isUserTyping","setIsUserTyping","a","params","URLSearchParams","append","toString","fetch","process","response","json","ok","Error","items","meta","console","log","getProducts","timer","setTimeout","clearTimeout","value","length","map","product","AppRoutes","path","component","from","home","exact","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.3c192439.chunk.js","sourcesContent":["export enum AppRoute {\n  home = '/',\n  login = '/login',\n  products = '/page/:pageNumber'\n}\n","import { ActionTypes, LOGIN, LOGOUT } from 'store/actions/actionTypes';\n\ninterface IDefaultState {\n    isLoggedIn: boolean\n}\n\nconst initialState:IDefaultState = {\n    isLoggedIn: true\n}\n\nexport const authReducer = (state:IDefaultState = initialState, action: ActionTypes):IDefaultState => {\n    switch (action.type) {\n        case LOGIN:\n            return {\n                isLoggedIn: action.payload\n            };\n        case LOGOUT:\n            return {\n                isLoggedIn: action.payload\n            };\n        default:\n            return state\n    }\n}","import { IProduct } from 'app/products/product/Product';\nimport { ActionTypes, GET_PRODUCTS, LOADING_PRODUCTS } from 'store/actions/actionTypes';\n\ninterface IDefaultState {\n    totalPages: number,\n    isLoading: boolean,\n    data: IProduct[]\n}\n\nconst initialState:IDefaultState = {\n    totalPages: 0,\n    isLoading: false,\n    data: []\n}\n\nexport const productsReducer = (state:IDefaultState = initialState, action: ActionTypes):IDefaultState => {\n        switch (action.type) {\n            case GET_PRODUCTS:\n                return {\n                    totalPages: +action.payload.totalPages,\n                    isLoading: false,\n                    data: action.payload.data\n                }\n            case LOADING_PRODUCTS:\n                return {\n                    ...state,\n                    isLoading: action.payload\n                }\n            default:\n                return state;\n        }\n    }","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { productsReducer } from './productsReducer';\n\nexport default combineReducers({\n    products: productsReducer,\n    auth: authReducer\n})","import { IProduct } from 'app/products/product/Product';\n\n// === PRODUCTS\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\nexport const LOADING_PRODUCTS = \"LOADING_PRODUCTS\";\n\n// === AUTH\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\n\n// === DISPATCH TYPES\nexport interface IGetProducts {\n    type: typeof GET_PRODUCTS,\n    payload: {\n        data: IProduct[],\n        totalPages: string,\n    }\n}\n\nexport interface ILoadingProducts {\n    type: typeof LOADING_PRODUCTS,\n    payload: boolean\n}\n\nexport interface ILogin {\n    type: typeof LOGIN,\n    payload: boolean\n}\n\nexport interface ILogout {\n    type: typeof LOGOUT,\n    payload: boolean\n}\n\nexport type ActionTypes = IGetProducts | ILoadingProducts | ILogin | ILogout;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type RootStore = ReturnType<typeof rootReducer>","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { store } from 'store/store';\n\nimport { Provider } from 'react-redux';\n\nimport { AppProvidersProps } from './AppProviders.types';\n\nexport const AppProviders = ({ children }: AppProvidersProps) => (\n    <Router>\n        <Provider store={store}>{children}</Provider>\n    </Router>\n);\n","import React from 'react'\n\nconst Logo = ({className}: {className?:string}) => {\n    return (\n        <h2 style={{fontSize: '1.6rem'}} className={className}>\n            join.tsh.io\n        </h2>\n    )\n}\n\nexport default Logo\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport Logo from '../logo/Logo';\nimport { AppRoute } from 'routing/AppRoute.enum';\nimport { login } from 'store/actions/authActions';\nimport './Login.scss';\n\nexport const Login = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const onSubmit = () => {\n        history.push('/');\n        dispatch(login());\n    };\n\n    return (\n        <div className='login__wrapper'>\n            <div className='login__background-img' />\n            <div className='login__content'>\n                <div className='login__header'>\n                    <Logo />\n                </div>\n                <div className='login__form'>\n                    <h2>Login</h2>\n                    <form onSubmit={onSubmit}>\n                        <div>\n                            <label htmlFor='username'>Username:</label>\n                            <input\n                                id='username'\n                                name='username'\n                                type='text'\n                                placeholder='Enter username'\n                            />\n                        </div>\n                        <div>\n                            <label htmlFor='password'>Password:</label>\n                            <input\n                                id='password'\n                                name='password'\n                                type='password'\n                                placeholder='Enter password'\n                            />\n                        </div>\n                        <button className='btn' type='submit'>\n                            Log in\n                        </button>\n                        <Link to={AppRoute.login}>Forgot password?</Link>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { LOGIN, LOGOUT } from './actionTypes';\n\nexport function login() {\n    // TODO: auth user logic\n\n    return {type: LOGIN, payload: true}\n}\n\nexport function logout() {\n    // TODO: auth user logic\n\n    return {type: LOGOUT, payload: false}    \n}","import React from 'react';\nimport './SearchField.scss';\n\ninterface ISearchField {\n    className?: string;\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst SearchField = ({ className, onChange }: ISearchField) => {\n    return (\n        <div className={`search-field ${className}`}>\n            <input\n                type='text'\n                name='search'\n                id='search'\n                placeholder='Search'\n                onChange={onChange}\n            />\n            <i className='search-field__icon'></i>\n        </div>\n    );\n};\n\nexport default SearchField;\n","import React from 'react';\nimport './Filter.scss';\n\ninterface IFilter {\n    name?: string;\n    id: string;\n    label?: string;\n    onClick: () => void;\n}\n\nconst Filter = ({ name, id, label, onClick }: IFilter) => {\n    return (\n        <>\n            <input\n                type='checkbox'\n                name={name}\n                id={id}\n                className='checkbox'\n                onClick={onClick}\n            />\n            <label htmlFor={id} data-cy={id + '-label'}>\n                {label}\n            </label>\n        </>\n    );\n};\n\nexport default Filter;\n","export default function createContainer(portalId:string, className?:string):HTMLElement {\n    let element = document.getElementById(portalId);\n\n    if (element) {\n        return element;\n    }\n\n    element = document.createElement('div');\n    element.setAttribute('id', portalId);\n\n    if (className) element.className = className;\n\n    document.body.appendChild(element);\n\n    return element;\n}","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport createContainer from 'utils/createContainer';\nimport './Dropdown.scss';\n\ninterface IDropdown {\n    isActive: boolean;\n    position: { top: number; left: number };\n    children: React.ReactNode;\n}\n\nconst Dropdown = ({ isActive, position, children }: IDropdown) => {\n    if (!isActive) return null;\n    return createPortal(\n        <div className='dropdown' style={position}>\n            {children}\n        </div>,\n        createContainer('dropdown-container')\n    );\n};\n\nexport default Dropdown;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { logout } from 'store/actions/authActions';\nimport { RootStore } from 'store/store';\nimport Logo from 'app/logo/Logo';\nimport SearchField from './searchField/SearchField';\nimport Filter from 'app/filter/Filter';\nimport Dropdown from 'app/dropdown/Dropdown';\nimport './Header.scss';\n\ninterface IHeader {\n    onToggleActiveFilter: () => void;\n    onTogglePromoFilter: () => void;\n    onChangeSearchValue: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\ninterface IDropdownPosition {\n    top: number;\n    left: number;\n}\n\nconst Header = ({\n    onToggleActiveFilter,\n    onTogglePromoFilter,\n    onChangeSearchValue,\n}: IHeader) => {\n    const { isLoggedIn } = useSelector((state: RootStore) => state.auth);\n    const dispatch = useDispatch();\n\n    const [isDropdownActive, setIsDropdownActive] = useState<boolean>(false);\n    const [dropdownPosition, setDropdownPosition] = useState<IDropdownPosition>(\n        {\n            top: 0,\n            left: 0,\n        }\n    );\n\n    const onLogout = () => {\n        setIsDropdownActive(false);\n        dispatch(logout());\n    };\n\n    const onUserButtonClick = (e: React.MouseEvent<HTMLElement>) => {\n        const target = e.currentTarget.getBoundingClientRect();\n\n        setDropdownPosition({ top: target.bottom, left: target.right - 200 });\n        setIsDropdownActive((prev) => !prev);\n    };\n\n    return (\n        <>\n            <header className='header__wrapper'>\n                <div className='container header__content'>\n                    <Logo className='header__logo' />\n                    <SearchField\n                        className='header__search'\n                        onChange={onChangeSearchValue}\n                    />\n                    <div className='header__filters'>\n                        <Filter\n                            name='active-filter'\n                            id='active-filter'\n                            label='Active'\n                            onClick={onToggleActiveFilter}\n                        />\n                        <Filter\n                            name='promo-filter'\n                            id='promo-filter'\n                            label='Promo'\n                            onClick={onTogglePromoFilter}\n                        />\n                    </div>\n                    {isLoggedIn ? (\n                        <button\n                            className='user-menu-button'\n                            onClick={onUserButtonClick}\n                        >\n                            <img\n                                src='https://i.pravatar.cc/50'\n                                alt='user avatar'\n                            />\n                        </button>\n                    ) : (\n                        <Link\n                            to='/login'\n                            className='btn-outline'\n                            style={{ justifySelf: 'end' }}\n                        >\n                            Log in\n                        </Link>\n                    )}\n                </div>\n            </header>\n            <Dropdown isActive={isDropdownActive} position={dropdownPosition}>\n                <button className='logout-button' onClick={onLogout}>\n                    Logout\n                </button>\n            </Dropdown>\n        </>\n    );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport './Rating.scss';\n\nconst Rating = ({ rating }: { rating: number }) => {\n    const [stars, setStars] = useState<React.ReactNode[]>([]);\n\n    useEffect(() => {\n        const starsArray = [];\n        for (let i = 0; i < 5; i++) {\n            starsArray.unshift(\n                <button\n                    key={i}\n                    className={`star ${i < rating ? 'star--is-marked' : ''}`}\n                />\n            );\n        }\n\n        setStars(starsArray);\n    }, [rating]);\n\n    return <div className='rating'>{stars}</div>;\n};\n\nexport default Rating;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport createContainer from 'utils/createContainer';\nimport './Backdrop.scss';\n\nconst Backdrop = ({ onClick }: { onClick: () => void }) => {\n    return createPortal(\n        <div className='backdrop' onClick={onClick}></div>,\n        createContainer('backdrop-container')\n    );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport Backdrop from 'app/backdrop/Backdrop';\nimport createContainer from 'utils/createContainer';\nimport './Modal.scss';\n\ninterface IModal {\n    image?: string;\n    title: string;\n    description: string;\n    onClose: () => void;\n}\n\nconst Modal = ({ image, title, description, onClose }: IModal) => {\n    return createPortal(\n        <div className='modal'>\n            <button className='modal__close-btn' onClick={onClose}></button>\n            {image && (\n                <div className='modal__image'>\n                    <img src={image} alt={title} />\n                </div>\n            )}\n            <h2 className='modal__title'>{title}</h2>\n            <p className='modal__description'>{description}</p>\n            <Backdrop onClick={onClose} />\n        </div>,\n        createContainer('modal-container')\n    );\n};\n\nexport default Modal;\n","import React from 'react';\nimport './LoadingSpinner.scss';\n\nconst LoadingSpinner = ({ isSmall }: { isSmall?: boolean }) => {\n    return (\n        <div\n            className={`loading-spinner ${\n                isSmall ? 'loading-spinner--small' : ''\n            }`}\n        ></div>\n    );\n};\n\nexport default LoadingSpinner;\n","import Rating from 'app/rating/Rating';\nimport React, { useState } from 'react';\nimport Modal from 'app/modal/Modal';\nimport LoadingSpinner from 'app/loadingSpinner/LoadingSpinner';\nimport './Product.scss';\n\nexport interface IProduct {\n    id: number;\n    name: string;\n    description: string;\n    rating: number;\n    image: string;\n    promo: boolean;\n    active: boolean;\n}\n\nconst Product = ({\n    id,\n    name,\n    description,\n    rating,\n    image,\n    promo,\n    active,\n}: IProduct) => {\n    const [isModalActive, setIsModalActive] = useState<boolean>(false);\n    const [isImgLoading, setIsImgLoading] = useState<boolean>(true);\n\n    const onModalClose = () => setIsModalActive(false);\n\n    return (\n        <div className='product'>\n            {isModalActive && (\n                <Modal\n                    onClose={onModalClose}\n                    image={image}\n                    title={name}\n                    description={description}\n                />\n            )}\n            <div className='product__img'>\n                {promo && <div className='product__label'>Promo</div>}\n                {isImgLoading && <LoadingSpinner isSmall={true} />}\n                <img\n                    style={{ display: isImgLoading ? 'none' : '' }}\n                    onLoad={() => setIsImgLoading(false)}\n                    src={image}\n                    alt={name}\n                />\n            </div>\n            <div className='product__content'>\n                <h3 className='product__title'>{name}</h3>\n                <p>{description}</p>\n            </div>\n            <div className='product__footer'>\n                <div className='product__rating'>\n                    <Rating rating={rating} />\n                </div>\n                <button\n                    onClick={() => setIsModalActive((prev) => !prev)}\n                    className='btn'\n                    disabled={!active}\n                >\n                    {active ? 'Show details' : 'Unavailable'}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Product;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Pagination.scss';\n\ninterface IPagination {\n    page: number;\n    totalPages: number;\n}\n\nconst Pagination = ({ page, totalPages }: IPagination) => {\n    const [paginationElements, setPaginationElements] = useState<\n        React.ReactNode[]\n    >([]);\n\n    useEffect(() => {\n        const pages = [];\n\n        if (totalPages <= 6) {\n            // case #1: number of pages is lower or equal 6\n            // show all pages without \"...\" divider\n            for (let i = 1; i <= totalPages; i++) {\n                pages.push(\n                    <li\n                        className={`pagination__element ${\n                            page === i ? 'pagination__element--active' : ''\n                        }`}\n                        key={i}\n                    >\n                        <Link to={`/page/${i}`}>{i}</Link>\n                    </li>\n                );\n            }\n        } else if (totalPages > 6 && totalPages - page < 5) {\n            // case #2: number of pages is higher than 6, but there is less than 5 pages to the end of range\n\n            // show all remaining pages without divider\n            for (let i = totalPages - 5; i <= totalPages; i++) {\n                pages.push(\n                    <li\n                        className={`pagination__element ${\n                            page === i ? 'pagination__element--active' : ''\n                        }`}\n                        key={i}\n                    >\n                        <Link to={`/page/${i}`}>{i}</Link>\n                    </li>\n                );\n            }\n        } else if (totalPages > 6 && totalPages - page >= 5) {\n            // case #3: number of pages in total is higher than 6 and there is more than 5 pages to the end of rage\n\n            // show the current page the user is on and its neighbours, add divider and show last three pages of the range\n            const countStart: number = page > 1 ? page - 1 : 1;\n\n            // generate first pages\n            for (let i = countStart; i <= countStart + 2; i++) {\n                pages.push(\n                    <li\n                        className={`pagination__element ${\n                            page === i ? 'pagination__element--active' : ''\n                        }`}\n                        key={i}\n                    >\n                        <Link to={`/page/${i}`}>{i}</Link>\n                    </li>\n                );\n            }\n\n            // generate last pages\n            for (let i = totalPages - 2; i <= totalPages; i++) {\n                pages.push(\n                    <li\n                        className={`pagination__element ${\n                            page === i ? 'pagination__element--active' : ''\n                        }`}\n                        key={i}\n                    >\n                        <Link to={`/page/${i}`}>{i}</Link>\n                    </li>\n                );\n            }\n\n            // insert three dots in the middle\n            pages.splice(\n                3,\n                0,\n                <li className='pagination__element' key='divider'>\n                    ...\n                </li>\n            );\n        }\n\n        setPaginationElements(pages);\n    }, [page, totalPages]);\n\n    return (\n        <div className='container pagination'>\n            <ul className='pagination__list'>\n                {page > 1 && (\n                    <li className='pagination__element pagination__element--first'>\n                        <Link to='/page/1'>First</Link>\n                    </li>\n                )}\n                {paginationElements}\n                {totalPages !== page && (\n                    <li className='pagination__element pagination__element--last'>\n                        <Link to={`/page/${totalPages}`}>Last</Link>\n                    </li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './EmptyList.scss';\n\nconst EmptyList = () => {\n    return (\n        <div className='container'>\n            <div className='empty-list'>\n                <i className='empty-list__icon'></i>\n                <h3>Oops... It's empty here</h3>\n                <p>There are no products on the list</p>\n            </div>\n        </div>\n    );\n};\n\nexport default EmptyList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getProducts } from 'store/actions/productsActions';\nimport { RootStore } from 'store/store';\nimport Header from 'app/header/Header';\nimport Product from './product/Product';\nimport Pagination from 'app/pagination/Pagination';\nimport EmptyList from './emptyList/EmptyList';\nimport LoadingSpinner from 'app/loadingSpinner/LoadingSpinner';\nimport './Products.scss';\n\nexport const Products = () => {\n    const history = useHistory();\n    const { data, totalPages, isLoading } = useSelector(\n        (state: RootStore) => state.products\n    );\n    const dispatch = useDispatch();\n\n    const { pageNumber } = useParams<{ pageNumber: string }>();\n\n    const [isActive, setIsActive] = useState<boolean>(false);\n    const [isPromo, setIsPromo] = useState<boolean>(false);\n    const [searchValue, setSearchValue] = useState<string>('');\n    const [isUserTyping, setIsUserTyping] = useState<boolean>(false);\n\n    const onToggleActiveFilter = (): void => setIsActive((prev) => !prev);\n    const onTogglePromoFilter = (): void => setIsPromo((prev) => !prev);\n    const onChangeSearchValue = (\n        e: React.ChangeEvent<HTMLInputElement>\n    ): void => {\n        setIsUserTyping(true);\n        setSearchValue(e.target.value);\n    };\n\n    useEffect(() => {\n        if (!isUserTyping) {\n            dispatch(getProducts(pageNumber, searchValue, isActive, isPromo));\n        }\n\n        if (isUserTyping) {\n            const timer = setTimeout(() => {\n                setIsUserTyping(false);\n            }, 700);\n\n            return () => {\n                clearTimeout(timer);\n            };\n        }\n    }, [isActive, isPromo, searchValue, pageNumber, dispatch, isUserTyping]);\n\n    useEffect(() => {\n        if (+pageNumber > totalPages) {\n            history.push('/page/1');\n        }\n    }, [history, pageNumber, totalPages]);\n\n    return (\n        <>\n            <Header\n                onToggleActiveFilter={onToggleActiveFilter}\n                onTogglePromoFilter={onTogglePromoFilter}\n                onChangeSearchValue={onChangeSearchValue}\n            />\n            {isLoading ? (\n                <LoadingSpinner />\n            ) : data.length > 0 ? (\n                <>\n                    <div className='container products__container'>\n                        {data.map((product) => (\n                            <Product\n                                key={product.id}\n                                id={product.id}\n                                name={product.name}\n                                description={product.description}\n                                rating={product.rating}\n                                image={product.image}\n                                promo={product.promo}\n                                active={product.active}\n                            />\n                        ))}\n                    </div>\n                    <Pagination page={+pageNumber} totalPages={totalPages} />\n                </>\n            ) : (\n                <EmptyList />\n            )}\n        </>\n    );\n};\n","import { Dispatch } from 'redux';\nimport { ActionTypes, GET_PRODUCTS, LOADING_PRODUCTS } from './actionTypes';\n\nexport const getProducts = (pageNumber: string, searchValue: string, isActive: boolean, isPromo: boolean) => async(dispatch: Dispatch<ActionTypes>) => {\n        dispatch({ type: LOADING_PRODUCTS, payload: true })\n        \n        // construct URL params\n        const params = new URLSearchParams([\n            ['limit', '8'],\n            ['page', pageNumber],\n        ]);\n        if (searchValue) params.append('search', searchValue);\n        if (isActive) params.append('active', isActive.toString());\n        if (isPromo) params.append('promo', isPromo.toString());\n\n        // make API request\n        try {\n            const response = await fetch(\n                `${process.env.REACT_APP_API_URL}products?${params.toString()}`\n            );\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error('Unexpected error occured');\n            }\n\n            dispatch({ type: GET_PRODUCTS, payload: {data: data.items, totalPages: data.meta.totalPages} });\n        } catch (error) {\n            // TODO: push notification with error message\n            console.log(error);\n            dispatch({type: LOADING_PRODUCTS, payload: false})\n        }\n    }","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Login } from 'app/login/Login';\nimport { Products } from 'app/products/Products';\n\nimport { AppRoute } from './AppRoute.enum';\n\nexport const AppRoutes = () => {\n    return (\n        <Switch>\n            <Route path={AppRoute.login} component={Login} />\n            <Route path={AppRoute.products} component={Products} />\n            <Redirect from={AppRoute.home} to='/page/1' exact />\n            <Redirect to={AppRoute.home} />\n        </Switch>\n    );\n};\n","import React from 'react';\n\nimport { AppRoutes } from 'routing/AppRoutes';\n\nexport const App = () => {\n  return <AppRoutes />;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'normalize.css'\nimport './index.scss';\n\nimport { AppProviders } from 'providers/AppProviders';\n\nimport { App } from './app/App';\n\nReactDOM.render(\n  <AppProviders>\n    <App />\n  </AppProviders>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}